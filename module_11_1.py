"""
Задача:
Выберите одну или несколько сторонних библиотек Python, например, requests, pandas,
numpy, matplotlib, pillow.
После выбора библиотек(-и) изучите документацию к ней(ним), ознакомьтесь с их основными
 возможностями и функциями. К каждой библиотеке дана ссылка на документацию ниже.
Если вы выбрали:
requests - запросить данные с сайта и вывести их в консоль.
pandas - считать данные из файла, выполнить простой анализ данных (на своё усмотрение) и
вывести результаты в консоль.
numpy - создать массив чисел, выполнить математические операции с массивом и вывести
результаты в консоль.
matplotlib - визуализировать данные с помощью библиотеки любым удобным для вас инструментом
из библиотеки.
pillow - обработать изображение, например, изменить его размер, применить эффекты и сохранить
в другой формат.
В приложении к ссылке на GitHub напишите комментарий о возможностях, которые предоставила вам
 выбранная библиотека и как вы расширили возможности Python с её помощью.
Примечания:
Можете выбрать не более 3-х библиотек для изучения.
Желательно продемонстрировать от 3-х функций/классов/методов/операций из каждой выбранной
библиотеки.
"""
import pandas as pd
import numpy as np

# Создание DataFrame из словаря
data = {
    'Имя': ['Алексей', 'Мария', 'Иван', 'Анна', 'Саша'],
    'Возраст': [25, 30, 22, 27, 35],
    'Город': ['Москва', 'Санкт-Петербург', 'Казань', 'Новосибирск', 'Москва']
}

df = pd.DataFrame(data)

print(df)

# Фильтрация DataFrame по условию
adults = df[df['Возраст'] > 25]
print(adults)

# Группировка по городу и подсчет среднего возраста
average_age = df.groupby('Город')['Возраст'].mean()
print(average_age)



# import numpy as np
# Создание массива из списка
array = np.array([1, 2, 3, 4, 5])
print(array)

# Арифметические операции
array_plus_one = array + 1
print(array_plus_one)

# Создание двумерного массива (матрицы)
matrix = np.array([[1, 2, 3], [4, 5, 6]])
print(matrix)

# Транспонирование матрицы
transposed_matrix = matrix.T
print(transposed_matrix)

# Генерация случайного массива
random_array = np.random.rand(3, 3)
print(random_array)

# Вычисление среднего значения
mean_value = np.mean(random_array)
print(mean_value)


