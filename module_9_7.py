# Напишите 2 функции:
# Функция, которая складывает 3 числа (sum_three)
# Функция декоратор (is_prime), которая распечатывает "Простое",
# если результат 1ой функции будет простым числом и "Составное" в противном случае
# Не забудьте написать внутреннюю функцию wrapper в is_prime
# Функция is_prime должна возвращать wrapper
# @is_prime - декоратор для функции sum_three


def is_prime(func):
    """
    Декоратор, который проверяет, является ли результат функции простым числом.
    """

    def wrapper(*args, **kwargs):
        # Вызов функции и получение результата
        result = func(*args, **kwargs)

        # Проверка, является ли результат простым числом
        if result <= 1:
            # Числа меньше или равные 1 не являются простыми
            print("Составное")
        else:
            # Полный перебор делителей от 2 до result-1
            for i in range(2, result):
                if result % i == 0:
                    # Если число делится на i, оно составное
                    print("Составное")
                    return result  # Завершаем выполнение функции
            # Если цикл завершился, значит, число не делится ни на один из проверенных делителей
            print("Простое")

        # Возвращаем результат функции
        return result

    return wrapper


@is_prime
def sum_three(a, b, c):
    """
    Функция, которая возвращает сумму трёх чисел.
    """
    return a + b + c


@is_prime
def sum_three(a, b, c):
    return a + b + c


result = sum_three(2, 3, 6)
print(result)
